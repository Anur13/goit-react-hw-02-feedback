{"version":3,"sources":["FeedbackOptions/FeedBack-Statistics/FeedBackStatistics.js","FeedbackOptions/Notification-message/NotificationMessage.js","FeedbackOptions/FeedbackOptions.js","App.js","index.js","FeedbackOptions/FeedBack-Statistics/FeedBackStatistics.module.css","FeedbackOptions/Button.module.css","FeedbackOptions/Notification-message/NotificationMessage.module.css"],"names":["FeedBackStatistics","good","neutral","bad","totalFeedback","positiveFeedback","className","styles","statisticsContainer","statisticsList","statisticsListItem","NotificationMessage","notificationMessage","FeedbackOptions","state","incrementGood","event","setState","prevState","incrementNeutral","incrementBad","countTotalFeedback","Object","values","this","reduce","acc","value","Math","round","container","type","optionButton","onClick","Component","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iSA4BeA,EAzBY,SAAC,GAMrB,IALLC,EAKI,EALJA,KACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,IACAC,EAEI,EAFJA,cACAC,EACI,EADJA,iBAEA,OACE,sBAAKC,UAAWC,IAAOC,oBAAvB,UACE,4CACA,qBAAIF,UAAWC,IAAOE,eAAtB,UACE,qBAAIH,UAAWC,IAAOG,mBAAtB,mBAAiDT,KACjD,qBAAIK,UAAWC,IAAOG,mBAAtB,sBAAoDR,KACpD,qBAAII,UAAWC,IAAOG,mBAAtB,kBAAgDP,KAChD,qBAAIG,UAAWC,IAAOG,mBAAtB,6BACmBN,KAEnB,qBAAIE,UAAWC,IAAOG,mBAAtB,gCACsBL,EADtB,c,gBCTOM,EARa,WAC1B,OACE,mCACE,sBAAML,UAAWC,IAAOK,oBAAxB,kCCyESC,E,4MAzEbC,MAAQ,CACNb,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPY,cAAgB,SAAAC,GACd,EAAKC,UAAS,SAAAC,GACZ,MAAO,CAAEjB,KAAMiB,EAAUjB,KAAO,O,EAGpCkB,iBAAmB,SAAAH,GACjB,EAAKC,UAAS,SAAAC,GACZ,MAAO,CAAEhB,QAASgB,EAAUhB,QAAU,O,EAG1CkB,aAAe,SAAAJ,GACb,EAAKC,UAAS,SAAAC,GACZ,MAAO,CAAEf,IAAKe,EAAUf,IAAM,O,4CAIlC,WACE,IAAMkB,EAAqBC,OAAOC,OAAOC,KAAKV,OAAOW,QACnD,SAACC,EAAKC,GAAN,OAAiBD,EAAOC,IACxB,GAGItB,EAAmBuB,KAAKC,MAC3BL,KAAKV,MAAMb,KAAOoB,EAAsB,KAG3C,OACE,sBAAKf,UAAWC,IAAOuB,UAAvB,UACE,uDACA,gCACE,wBACEC,KAAK,SACLzB,UAAWC,IAAOyB,aAClBC,QAAST,KAAKT,cAHhB,kBAOA,wBACEgB,KAAK,SACLzB,UAAWC,IAAOyB,aAClBC,QAAST,KAAKL,iBAHhB,qBAOA,wBACEY,KAAK,SACLzB,UAAWC,IAAOyB,aAClBC,QAAST,KAAKJ,aAHhB,oBASDC,EAAqB,EACpB,cAAC,EAAD,aACEjB,cAAeiB,EACfhB,iBAAkBA,GACdmB,KAAKV,QAGX,cAAC,EAAD,W,GAnEoBoB,aCKfC,MARf,WACE,OACE,qBAAK7B,UAAU,MAAf,SACE,cAAC,EAAD,OCAN8B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,eAAiB,2CAA2C,mBAAqB,iD,kBCAnGD,EAAOC,QAAU,CAAC,aAAe,6BAA6B,UAAY,4B,kBCA1ED,EAAOC,QAAU,CAAC,oBAAsB,oD","file":"static/js/main.b526e340.chunk.js","sourcesContent":["import React from 'react';\nimport styles from './FeedBackStatistics.module.css';\n\nconst FeedBackStatistics = ({\n  good,\n  neutral,\n  bad,\n  totalFeedback,\n  positiveFeedback,\n}) => {\n  return (\n    <div className={styles.statisticsContainer}>\n      <h2>Statistics</h2>\n      <ul className={styles.statisticsList}>\n        <li className={styles.statisticsListItem}>Good: {good}</li>\n        <li className={styles.statisticsListItem}>Neutral: {neutral}</li>\n        <li className={styles.statisticsListItem}>Bad: {bad}</li>\n        <li className={styles.statisticsListItem}>\n          Total Feedback: {totalFeedback}\n        </li>\n        <li className={styles.statisticsListItem}>\n          Positive Feedback: {positiveFeedback}%\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default FeedBackStatistics;\n","import React from 'react';\nimport styles from './NotificationMessage.module.css';\n\nconst NotificationMessage = () => {\n  return (\n    <>\n      <span className={styles.notificationMessage}>No feedback given</span>\n    </>\n  );\n};\n\nexport default NotificationMessage;\n","import styles from './Button.module.css';\nimport React, { Component } from 'react';\nimport FeedBackStatistics from './FeedBack-Statistics/FeedBackStatistics';\nimport NotificationMessage from './Notification-message/NotificationMessage';\n\nclass FeedbackOptions extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  incrementGood = event => {\n    this.setState(prevState => {\n      return { good: prevState.good + 1 };\n    });\n  };\n  incrementNeutral = event => {\n    this.setState(prevState => {\n      return { neutral: prevState.neutral + 1 };\n    });\n  };\n  incrementBad = event => {\n    this.setState(prevState => {\n      return { bad: prevState.bad + 1 };\n    });\n  };\n\n  render() {\n    const countTotalFeedback = Object.values(this.state).reduce(\n      (acc, value) => (acc += value),\n      0,\n    );\n\n    const positiveFeedback = Math.round(\n      (this.state.good / countTotalFeedback) * 100,\n    );\n\n    return (\n      <div className={styles.container}>\n        <h1>Please leave feedback</h1>\n        <div>\n          <button\n            type=\"button\"\n            className={styles.optionButton}\n            onClick={this.incrementGood}\n          >\n            Good\n          </button>\n          <button\n            type=\"button\"\n            className={styles.optionButton}\n            onClick={this.incrementNeutral}\n          >\n            Neutral\n          </button>\n          <button\n            type=\"button\"\n            className={styles.optionButton}\n            onClick={this.incrementBad}\n          >\n            Bad\n          </button>\n        </div>\n\n        {countTotalFeedback > 0 ? (\n          <FeedBackStatistics\n            totalFeedback={countTotalFeedback}\n            positiveFeedback={positiveFeedback}\n            {...this.state}\n          />\n        ) : (\n          <NotificationMessage />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default FeedbackOptions;\n","import FeedbackOptions from './FeedbackOptions/FeedbackOptions';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <FeedbackOptions />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticsList\":\"FeedBackStatistics_statisticsList__2HrUf\",\"statisticsListItem\":\"FeedBackStatistics_statisticsListItem__1TAXo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"optionButton\":\"Button_optionButton__3ngzp\",\"container\":\"Button_container__wVZ0u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notificationMessage\":\"NotificationMessage_notificationMessage__2QqJc\"};"],"sourceRoot":""}